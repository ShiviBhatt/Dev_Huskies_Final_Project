/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.IncidentUnitWorkArea;

import userinterface.DisasterManagementWorkArea.*;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DisasterOrganization;
import Business.Organization.Organization;
import Business.Role.ReportingAdmin;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReportingAdminSceneRequest;
import Business.WorkQueue.VolunteerSceneRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javafx.scene.Scene;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhankuwarsisodiya
 */
public class IncidentManagerSceneManageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DisasterAdminSceneManageJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    Network network;
    EcoSystem business;

    public IncidentManagerSceneManageJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem business, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.business = business;
        this.organization = organization;
        populateTable();
        populateSiteNameCombo();
        populateSiteManagerCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageAssigned = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        siteNameComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        sceneManagerCombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 255));

        tblManageAssigned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Scene Id", "Scene Name ", "Sender", "Assigned Reporting Admin", "Zip Code", "No of Victims", "Location", "Estimated Loss", "Status", "Creatd Date", "Additional Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageAssigned);

        jLabel1.setText("Site Name");

        siteNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Reporting Admin");

        sceneManagerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Assign");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(58, 58, 58)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(siteNameComboBox, 0, 102, Short.MAX_VALUE)
                                            .addComponent(sceneManagerCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1)))
                        .addGap(0, 652, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(siteNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sceneManagerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(170, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String msg = JOptionPane.showInputDialog("Additional Message");
        VolunteerSceneRequest scene = (VolunteerSceneRequest) siteNameComboBox.getSelectedItem();
        Employee employee = (Employee) sceneManagerCombo.getSelectedItem();
        scene.setSceneManager(employee);
        scene.setMessage(msg);
        scene.setStatus("Assigned Reporting Admin");
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {
                if (u.getEmployee().getId() == (employee.getId())) {
                    u.getWorkQueue().getWorkRequestList().add(scene);
                }
            }
        }        
        populateTable();
        populateSiteNameCombo();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sceneManagerCombo;
    private javax.swing.JComboBox siteNameComboBox;
    private javax.swing.JTable tblManageAssigned;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblManageAssigned.getModel();
        model.setRowCount(0);

        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof VolunteerSceneRequest) {
                Object[] row = new Object[model.getColumnCount()];
                row[0] = ((VolunteerSceneRequest) wr);
                row[1] = ((VolunteerSceneRequest) wr).getSceneName();
                row[2] = ((VolunteerSceneRequest) wr).getSender().getEmployee().getName();
                row[3] = ((VolunteerSceneRequest) wr).getSceneManager() == null ? "" : ((VolunteerSceneRequest) wr).getSceneManager().getName();
                row[4] = ((VolunteerSceneRequest) wr).getSceneZipcode();
                row[5] = ((VolunteerSceneRequest) wr).getNoOfVictims();
                row[6] = ((VolunteerSceneRequest) wr).getSceneLocationPoint();
                row[7] = ((VolunteerSceneRequest) wr).getEstimatedLoss();
                row[8] = ((VolunteerSceneRequest) wr).getStatus();
                row[9] = ((VolunteerSceneRequest) wr).getRequestDate();
                row[10] = ((VolunteerSceneRequest) wr).getMessage();
                model.addRow(row);
            }
        }

    }

    private void populateSiteNameCombo() {
        siteNameComboBox.removeAllItems();
        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if(wr instanceof VolunteerSceneRequest && ((VolunteerSceneRequest) wr).getSceneManager() == null) {
                siteNameComboBox.addItem(((VolunteerSceneRequest) wr));
            }
            
        }
    }

    private void populateSiteManagerCombo() {
        sceneManagerCombo.removeAllItems();
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {
                if (u.getRole() instanceof ReportingAdmin) {
                    sceneManagerCombo.addItem(u.getEmployee());
                }
            }
        }
    }
}
