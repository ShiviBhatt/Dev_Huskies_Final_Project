/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.voluntaryUnitPersonal;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.NewVolunteerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shivibhatt
 */
public class IndividualWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form IndividualWorkRequestJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    Network iNNetwork;
    Organization iNOrganization;
    EcoSystem ecosystem;
    UserAccount userAccount;
    public IndividualWorkRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization iNOrganization, Enterprise enterprise, Network iNNetwork, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.iNOrganization = iNOrganization;
        this.enterprise = enterprise;
        this.iNNetwork = iNNetwork;
        this.ecosystem = ecosystem;
        populateTable();
    }

      public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblIndividualRequest.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()) {
            if (workRequest instanceof NewVolunteerWorkRequest) {
                Object[] row = new Object[4];
                row[0] = workRequest;
                row[1] = ((NewVolunteerWorkRequest) workRequest).getRequestType();
                row[2] = workRequest.getSender();
                row[3] = ((NewVolunteerWorkRequest) workRequest).getRemainingQuantity();
                model.addRow(row);

            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIndividualRequest = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        viewDetailsBtn2 = new javax.swing.JButton();
        btnServe = new javax.swing.JButton();
        btnButton = new javax.swing.JButton();

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel3.setText(" Individual Work Request Management");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel2.setText("Request Received");

        tblIndividualRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Request Type", "Manager Requested", "Number of Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblIndividualRequest);

        btnAssign.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        viewDetailsBtn2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        viewDetailsBtn2.setText("View Details");
        viewDetailsBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsBtn2ActionPerformed(evt);
            }
        });

        btnServe.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnServe.setText("Serve");
        btnServe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServeActionPerformed(evt);
            }
        });

        btnButton.setText("<Back");
        btnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(340, 340, 340)
                                .addComponent(btnAssign)
                                .addGap(13, 13, 13)
                                .addComponent(viewDetailsBtn2)
                                .addGap(19, 19, 19)
                                .addComponent(btnServe))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnButton)))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAssign)
                    .addComponent(viewDetailsBtn2)
                    .addComponent(btnServe))
                .addContainerGap(265, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblIndividualRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            NewVolunteerWorkRequest workRequest = (NewVolunteerWorkRequest) tblIndividualRequest.getValueAt(selectedRow, 2);

            if (workRequest.getStatus().equals("Requested")) {
                workRequest.setStatus("Pending");
                workRequest.setReceiver(userAccount);

                populateTable();

            } else {
                JOptionPane.showMessageDialog(null, "Already assigned");
            }

        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void viewDetailsBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsBtn2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblIndividualRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            NewVolunteerWorkRequest workRequest = (NewVolunteerWorkRequest) tblIndividualRequest.getValueAt(selectedRow, 2);
            if (workRequest.getStatus().equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Please ensure the request is assigned to self", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                IndividualViewJPanel ramop = new IndividualViewJPanel(userProcessContainer, userAccount, iNOrganization, enterprise, iNNetwork, ecosystem, workRequest);
                userProcessContainer.add("Hospital_ViewPanel", ramop);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
    }//GEN-LAST:event_viewDetailsBtn2ActionPerformed

    private void btnServeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServeActionPerformed
        // TODO add your handling code here:
              int selectedRow = tblIndividualRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            NewVolunteerWorkRequest workRequest = (NewVolunteerWorkRequest) tblIndividualRequest.getValueAt(selectedRow, 2);
            if (workRequest.getStatus().equals("Allocated")) {

                workRequest.setStatus("Complete");
                JOptionPane.showMessageDialog(null, "You have successfully completed the request");
                populateTable();

            } else {
                JOptionPane.showMessageDialog(null, "Please assign first");
            }

        }
    }//GEN-LAST:event_btnServeActionPerformed

    private void btnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnButtonActionPerformed
       // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        IndividualWorkAreaJPanel hospitalworkArea = (IndividualWorkAreaJPanel) component;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnButtonActionPerformed
  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnButton;
    private javax.swing.JButton btnServe;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIndividualRequest;
    private javax.swing.JButton viewDetailsBtn2;
    // End of variables declaration//GEN-END:variables

}